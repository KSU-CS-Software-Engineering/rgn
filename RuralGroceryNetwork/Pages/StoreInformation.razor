<!--
Copyright 2020 Kansas State University

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!-- Page to display node editor -->
@page "/StoreInformation"

@using GroceryLibrary
@using GroceryLibrary.Models

@using Microsoft.AspNetCore.Identity

<<<<<<< HEAD
@using Syncfusion.Blazor.DropDowns

@inject  UserManager<IdentityUser> UserManager
=======
@inject UserManager<IdentityUser> UserManager
>>>>>>> c6f76ed00ee04e99a1a75b407da46fa174e13391
@inject AuthenticationStateProvider AuthenticationStateProvider



<link rel="stylesheet" href="css/Style.css" /
<h1>Store Account Information</h1>
<div class=menu-collapsible id="Store-Geographical-Information" @onclick="()=>CollapseToggleOne = !CollapseToggleOne">
    <h2>Geographical Information</h2>
    @if (CollapseToggleOne)
    {
        <div class="store-element">
            <div>
                <label>StoreID: </label>
                <label>@s.StoreID</label>
            </div>
            <div>
                <label>Store Name: </label>
                <label>@s.StoreName</label>
            </div>
            <div>
                <label>City: </label>
                <label>@s.CityName</label>
            </div>
            <div>
                <label>Distributor: </label>
                <label>@s.DistributorName</label>
            </div>
            <button class="btn-primary">Edit</button>
            <button class="btn-primary">Save</button>
        </div>
    }
</div>

<div class=menu-collapsible id="Physical-Store-Information" @onclick="()=>CollapseToggleTwo = !CollapseToggleTwo">
    <h2>Physical Information</h2>
    @if (CollapseToggleTwo)
    {
        <div class="store-element">
            <div>
                <label>Square Footage Category: </label>
                <label>@s.SquareFootageCategory</label>
            </div>
            <div>
                <label>Number of Checkout Lanes: </label>
                <label>@s.NumberOfCheckoutLanes</label>
            </div>
<<<<<<< HEAD
        }
    </div>

    <div>
        <div class=menu-collapsible id="Delivery-Day-Information" @onclick="()=>CollapseToggleThree = !CollapseToggleThree">
            @if (CollapseToggleThree)
            {
                <h1>Store Delivery Information</h1>

                <h2>Delivery Days</h2>
                <div class="Sunday-Delivery">
                    <label>Sunday: </label>
                    <input type="checkbox" contenteditable="false" name="SundayCheckbox" value="Sunday" checked="@s.DeliverySunday" />
                </div>
                <div class="Monday-Delivery">
                    <label>Monday: </label>
                    <input type="checkbox" contenteditable="false" name="MondayCheckbox" value="Monday" checked="@s.DeliveryMonday" />
                </div>
                <div class="Tuesday-Delivery">
                    <label>Tuesday: </label>
                    <input type="checkbox" contenteditable="false" name="TuesdayCheckbox" value="Tuesday" checked="@s.DeliveryTuesday" />
                </div>
                <div class="Wednesday-Delivery">
                    <label>Wednesday: </label>
                    <input type="checkbox" contenteditable="false" name="WednesdayCheckbox" value="Wednesday" checked="@s.DeliveryWednesday" />
                </div>
                <div class="Thursday-Delivery">
                    <label>Thursday: </label>
                    <input type="checkbox" contenteditable="false" name="ThursdayCheckbox" value="Thursday" checked="@s.DeliveryThursday" />
                </div>
                <div class="Friday-Delivery">
                    <label>Friday: </label>
                    <input type="checkbox" contenteditable="false" name="FridayCheckbox" value="Friday" checked="@s.DeliveryFriday" />
                </div>
                <div class="Saturday-Delivery">
                    <label>Saturday: </label>
                    <input type="checkbox" contenteditable="false" name="SaturdayCheckbox" value="Saturday" checked="@s.DeliverySaturday" />
                </div>
            }
=======
            <button class="btn-primary">Edit</button>
            <button class="btn-primary">Save</button>
        </div>
    }
</div>

<div class=menu-collapsible id="Delivery-Day-Information" @onclick="()=>CollapseToggleThree = !CollapseToggleThree">
    <h2>Store Delivery Information</h2>
    @if (CollapseToggleThree)
    {
        <div class="store-element">
            <h2>Delivery Days</h2>
            <div class="Sunday-Delivery">
                <label>Sunday: </label>
                <input type="checkbox" contenteditable="false" name="SundayCheckbox" value="Sunday" checked disabled />
            </div>
            <div class="Monday-Delivery">
                <label>Monday: </label>
                <input type="checkbox" contenteditable="false" name="MondayCheckbox" value="Sunday" checked disabled />
            </div>
            <div class="Tuesday-Delivery">
                <label>Tuesday: </label>
                <input type="checkbox" contenteditable="false" name="TuesdayCheckbox" value="Sunday" disabled />
            </div>
            <div class="Wednesday-Delivery">
                <label>Wednesday: </label>
                <input type="checkbox" contenteditable="false" name="WednesdayCheckbox" value="Sunday" checked disabled />
            </div>
            <div class="Thursday-Delivery">
                <label>Thursday: </label>
                <input type="checkbox" contenteditable="false" name="ThursdayCheckbox" value="Sunday" checked disabled />
            </div>
            <div class="Friday-Delivery">
                <label>Friday: </label>
                <input type="checkbox" contenteditable="false" name="FridayCheckbox" value="Sunday" disabled />
            </div>
            <div class="Saturday-Delivery">
                <label>Saturday: </label>
                <input type="checkbox" contenteditable="false" name="SaturdayCheckbox" value="Sunday" checked disabled />
            </div>
            <button class="btn-primary">Edit</button>
            <button class="btn-primary">Save</button>
>>>>>>> c6f76ed00ee04e99a1a75b407da46fa174e13391
        </div>
    }
</div>

<div class=menu-collapsible id="Pallet-Information" @onclick="()=>CollapseToggleFour = !CollapseToggleFour">
    <h2>Pallet Information</h2>
    @if (CollapseToggleFour)
    {
        <div class="store-element">
            <div>
                <label>Pallet Minimum - Maximum: </label>
                <label>@s.PalletMinimum - @s.PalletMaximum</label>
            </div>

            <div>
                <label>Weekly Minimum Buying Requirement: </label>
                <label>@s.HasWeeklyBuyingRequirement</label>
            </div>

            <div>
                <label>Sells to Others: </label>
                <label>@s.SellsToOthers</label>
            </div>
            <button class="btn-primary">Edit</button>
            <button class="btn-primary">Save</button>
        </div>

    }
</div>

<div class=menu-collapsible @onclick="()=>CollapseToggleFive = !CollapseToggleFive">
    <h2>Store Equipment Information</h2>
    @if (CollapseToggleFive)
    {
        <div class="store-element">
            <div class="Loading-Dock">
                <label>Has Loading Dock: </label>
                <input type="checkbox" contenteditable="false" name="LoadingDockCheckbox" value="Sunday" checked disabled />
            </div>
            <div class="Fork-Lift">
                <label>Has Fork Lift: </label>
                <input type="checkbox" contenteditable="false" name="ForkLiftCheckbox" value="Sunday" checked disabled />
            </div>
            <div class="Pallet-Jack">
                <label>Has Pallet Jack: </label>
                <input type="checkbox" contenteditable="false" name="PalletJackCheckbox" value="Sunday" checked disabled />
            </div>
            <button class="btn-primary">Edit</button>
            <button class="btn-primary">Save</button>
        </div>
<<<<<<< HEAD
    </div>
    <SfDropDownList TItem="StateData" TValue="string" DataSource="States"
            Placeholder="Select a state">
        <DropDownListFieldSettings Text="Name" Value="ID">
        </DropDownListFieldSettings>
    </SfDropDownList>

</AuthorizeView>



@code { 
    public class StateData
    {
        public string ID { get; set; }
        public string Name { get; set; }
    }
=======
    }
</div>


@code {
>>>>>>> c6f76ed00ee04e99a1a75b407da46fa174e13391

    List<StateData> States = new List<StateData>();

    private Store s = new Store();
    private string email;

    //Variables used for determining whether each collapsible menu should be collapsed or not.
    private bool CollapseToggleOne = true;
    private bool CollapseToggleTwo = true;
    private bool CollapseToggleThree = true;
    private bool CollapseToggleFour = true;
    private bool CollapseToggleFive = true;



    /// <summary>
    /// Runs when the page is initially loaded. Sets the store equal to the information in database for current user
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        await LogUsername();
        s = SqlDataAccess.OnInitialize(email);

    }
<<<<<<< HEAD
}

@functions
{
    private object SaveButtonPressed()
    {
        SqlDataAccess.updateDeliveryDays();
        return new object();
=======
    private void SaveButtonPressed()
    {
        /*
         * Assign
         * StoreName - Can change
         * StoreCity - Can change
         * Distributor -
         * SquareFootageCategory
         * NumChkLanes
         * DeliveryDays
         * Pallet Min - Max
         * Weekly Buy Requirement
         * Sells to Others
         * Loading dock
         * fork lift
         * pallet jack
         *
         */
>>>>>>> c6f76ed00ee04e99a1a75b407da46fa174e13391
    }

    /// <summary>
    /// Grabs the current clients email address from the authentication view
    /// </summary>
    /// <returns>I am not really sure, it was the only way to get it working</returns>
    private async Task LogUsername()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var currentUser = await UserManager.GetUserAsync(user);
        email = currentUser.Email.ToUpper();
    }
}
