<!--
Copyright 2020 Kansas State University

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!-- Page that lets admins update the wording on the pages -->
@page "/pages"
@using GroceryLibrary
@using GroceryLibrary.Models

@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<AuthorizeView>
    <link rel="stylesheet" href="css/Style.css" />
    <h1>Edit Pages</h1>

    <!--Check to see if the user is an admin-->
    @if (IsAdmin(context.User.Identity.Name))
    {
        <!--If user is an admin load everything in-->
        <div class="Nodes-infos">
            <h3>How this works</h3>
            <p>
                Instructions
            </p>
            <TabControl>
                <TabPage Text="About Page">
                    <div>
                        @foreach (Page p in aboutPages)
                        {
                            <div>
                                <b>HeaderName: </b>
                                @if (!aboutEdit)
                                {
                                    <label>@p.HeaderName</label>
                                }
                                else
                                {
                                    <input type="text" name="HeaderNameEdit" class="text-align-right" placeholder="@p.HeaderName" @bind="@p.HeaderName" />
                                }
                            </div>
                            <div>
                                <b>Content: </b>
                                @if (!aboutEdit)
                                {
                                    <label>@p.Content</label>
                                }
                                else
                                {
                                    <input type="text" name="ContentEdit" class="text-align-right" placeholder="@p.Content" @bind="@p.Content" />
                                }
                            </div>
                            <br />
                        }
                    </div>
                    <button class="btn-primary" @onclick="e => this.aboutEdit = !this.aboutEdit">Edit</button>
                    <button class="btn-primary" @onclick="updateAboutPage">Save</button>
                </TabPage>
                <TabPage Text="Distribution Simulator">
                    <div>
                        <br />
                        <p>Please only use "Yes" or "No" for entering the Preference. Anything else will be considered "No".</p>
                        <br />
                        <b>Weekly Purchase Amount Variable Preference: </b>
                        @if (!simulatorEdit)
                        {
                            <label>@PurchasePreference</label>
                        }
                        else
                        {
                            <input type="text" name="PreferenceEdit" class="text-align-right" placeholder="@PurchasePreference" @bind="@PurchasePreference" />
                        }
                    </div>
                    <button class="btn-primary" @onclick="e => this.simulatorEdit = !this.simulatorEdit">Edit</button>
                    <button class="btn-primary" @onclick="updatePurchasePreference">Save</button>
                </TabPage>
                <TabPage Text="RGI Page">
                    <div>
                        @foreach (Page p in rgiPages)
                        {
                            <div>
                                <b>HeaderName: </b>
                                @if (!rgiEdit)
                                {
                                    <label>@p.HeaderName</label>
                                }
                                else
                                {
                                    <input type="text" name="HeaderNameEdit" class="text-align-right" placeholder="@p.HeaderName" @bind="@p.HeaderName" />
                                }
                            </div>
                            <div>
                                <b>Content: </b>
                                @if (!rgiEdit)
                                {
                                    <label>@p.Content</label>
                                }
                                else
                                {
                                    <input type="text" name="ContentEdit" class="text-align-right" placeholder="@p.Content" @bind="@p.Content" />
                                }
                            </div>
                            <br />
                        }
                    </div>
                    <button class="btn-primary" @onclick="e => this.rgiEdit = !this.rgiEdit">Edit</button>
                    <button class="btn-primary" @onclick="updateRGIPage">Save</button>
                </TabPage>
                <TabPage Text="Instructions Page">
                    <div>
                        @foreach (Page p in instructionPages)
                        {
                            <div>
                                <b>HeaderName: </b>
                                @if (!instructionEdit)
                                {
                                    <label>@p.HeaderName</label>
                                }
                                else
                                {
                                    <input type="text" name="HeaderNameEdit" class="text-align-right" placeholder="@p.HeaderName" @bind="@p.HeaderName" />
                                }
                            </div>
                            <div>
                                <b>Content: </b>
                                @if (!instructionEdit)
                                {
                                    <label>@p.Content</label>
                                }
                                else
                                {
                                    <input type="text" name="ContentEdit" class="text-align-right" placeholder="@p.Content" @bind="@p.Content" />
                                }
                            </div>
                            <br />
                        }
                    </div>
                    <button class="btn-primary" @onclick="e => this.instructionEdit = !this.instructionEdit">Edit</button>
                    <button class="btn-primary" @onclick="updateInstructionPage">Save</button>
                </TabPage>
                <TabPage Text="Admin Page">
                    <div>
                        @foreach (Page p in adminPages)
                        {
                            <div>
                                <b>HeaderName: </b>
                                @if (!adminEdit)
                                {
                                    <label>@p.HeaderName</label>
                                }
                                else
                                {
                                    <input type="text" name="HeaderNameEdit" class="text-align-right" placeholder="@p.HeaderName" @bind="@p.HeaderName" />
                                }
                            </div>
                            <div>
                                <b>Content: </b>
                                @if (!adminEdit)
                                {
                                    <label>@p.Content</label>
                                }
                                else
                                {
                                    <input type="text" name="ContentEdit" class="text-align-right" placeholder="@p.Content" @bind="@p.Content" />
                                }
                            </div>
                            <br />
                        }
                    </div>
                    <button class="btn-primary" @onclick="e => this.adminEdit = !this.adminEdit">Edit</button>
                    <button class="btn-primary" @onclick="updateAdminPage">Save</button>
                </TabPage>
                <TabPage Text="Side Menu">
                    <div>
                        @foreach (Page p in menuPages)
                        {
                            <div>
                                <b>HeaderName: </b>
                                @if (!menuEdit)
                                {
                                    <label>@p.HeaderName</label>
                                }
                                else
                                {
                                    <input type="text" name="HeaderNameEdit" class="text-align-right" placeholder="@p.HeaderName" @bind="@p.HeaderName" />
                                }
                            </div>
                            <br />
                        }
                    </div>
                    <button class="btn-primary" @onclick="e => this.menuEdit = !this.menuEdit">Edit</button>
                    <button class="btn-primary" @onclick="updateMenu">Save</button>
                </TabPage>
            </TabControl>
        </div>

        
    }
    else
    {
        <!--If the user isn't an admin, don't load anything in and show a message stating they're not an admin-->
        <br />
        <p>This page is for admins only, you're not logged in as an admin.</p>
    }
</AuthorizeView>


@code {
    private bool aboutEdit { get; set; } = false;
    private bool rgiEdit { get; set; } = false;
    private bool instructionEdit { get; set; } = false;
    private bool adminEdit { get; set; } = false;
    private bool simulatorEdit { get; set; } = false;
    private bool menuEdit { get; set; } = false;

    List<Page> aboutPages = SqlDataAccess.getPageContent("About");
    List<Page> rgiPages = SqlDataAccess.getPageContent("RGI");
    List<Page> instructionPages = SqlDataAccess.getPageContent("Instructions");
    List<Page> adminPages = SqlDataAccess.getPageContent("Admin");
    List<Page> menuPages = SqlDataAccess.getPageContent("Menu");

    string PurchasePreference = SqlDataAccess.GetPurchaseVariablePreference();

    /// <summary>
    /// Updates the given information when saving the about page
    /// </summary>
    private void updateAboutPage()
    {
        if (aboutEdit)
        {
            foreach(Page p in aboutPages)
            {
                SqlDataAccess.updatePageContent(p);
            }
            //reset edit state
            aboutEdit = !aboutEdit;
        }
    }

    /// <summary>
    /// Updates the given information when saving the RGI page
    /// </summary>
    private void updateRGIPage()
    {
        if (rgiEdit)
        {
            foreach (Page p in rgiPages)
            {
                SqlDataAccess.updatePageContent(p);
            }
            //reset edit state
            rgiEdit = !rgiEdit;
        }
    }

    /// <summary>
    /// Updates the given information when saving the Instruction Page
    /// </summary>
    private void updateInstructionPage()
    {
        if (instructionEdit)
        {
            foreach (Page p in instructionPages)
            {
                SqlDataAccess.updatePageContent(p);
            }
            //reset edit state
            instructionEdit = !instructionEdit;
        }
    }

    /// <summary>
    /// Updates the given information when saving the Admin Page
    /// </summary>
    private void updateAdminPage()
    {
        if (adminEdit)
        {
            foreach (Page p in adminPages)
            {
                SqlDataAccess.updatePageContent(p);
            }
            //reset edit state
            adminEdit = !adminEdit;
        }
    }

    /// <summary>
    /// Updates the weekly purchase preference 
    /// </summary>
    private void updatePurchasePreference()
    {
        if (simulatorEdit)
        {
            if (PurchasePreference == "Yes")
            {
                SqlDataAccess.UpdatePurchaseVariablePreference("Yes");
            }
            else
            {
                SqlDataAccess.UpdatePurchaseVariablePreference("No");
            }
            //reset edit state
            simulatorEdit = !simulatorEdit;
        }
    }

    /// <summary>
    /// Updates Items on the Side Menu
    /// </summary>
    private void updateMenu()
    {
        if (menuEdit)
        {
            foreach (Page p in menuPages)
            {
                SqlDataAccess.updatePageContent(p);
            }
            //reset edit state
            menuEdit = !menuEdit;
        }
    }

    /*Creates an AdminCheck object which will be able to tell if the current user
       is an Admin using the users username that's given to the method. Will return a bool, true if
       user is an Admin, else false*/
    private bool IsAdmin(string name)
    {
        AdminCheck admin = new AdminCheck();
        bool b = admin.IsAdmin(name);
        return b;
    }
}

