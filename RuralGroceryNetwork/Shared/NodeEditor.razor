<div class="form-field">
    <label>Name:</label>
    <div>
        <input @bind="NodeState.Name" />

    </div>
</div>
<div class="form-field">
    <label>Location:</label>
</div>
<div class="form-field">
    <input @bind="NodeState.Location_x" />

    <input @bind="NodeState.Location_y" />

    <button class="btn-1">
        <img src="img/location.png" />
    </button>
</div>
<div class="form-field">
    <label>Demand:</label>
    <div>
        <input @bind="NodeState.Demand" />

        <label>palettes</label>
    </div>
</div>
<div class="form-field">
    <label>Supply:</label>
    <div>
        <input @bind="NodeState.Supply" />

        <label>palettes</label>
    </div>
</div>
<br />

<!-- button for adding a node  -->
<button type="submit" @onclick="@(() =>@AddNodes(NodeState.Name,NodeState.Demand,NodeState.Supply,NodeState.Location_x,NodeState.Location_x))" class="btn-1">Add Stores</button>

<!-- button for opening the import page -->
<br />
<button @onclick="enableImportPage" class="btn-1">Import Stores from .csv</button>

<!-- display the Import node Page -->
@if (ShowImportPage)
{
    <ImportNodePage Nodes="nodes" Close="disableImportPage" />
}

<!-- button for removing the nodes from list -->
<br />
<button @onclick="RemoveNodes" class="btn-1">Remove All Stores</button>

<!-- button for showing the nodelist  page -->
<br />
<button @onclick="enableNodeList">Stores List</button>

<!-- Display the Node List  page -->
@if (ShowNodeList)
{
    <NodeListPage Close="disableNodeList" Nodes="nodes" />
}

<style>
    .embed-container {
        position: relative;
        padding-bottom: 80%;
        height: 0;
        max-width: 100%;
    }

        .embed-container iframe, .embed-container object, .embed-container iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

    small {
        position: absolute;
        z-index: 40;
        bottom: 0;
        margin-bottom: -15px;
    }
</style><div class="embed-container"><iframe width="500" height="400" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" title="Test Map" src="//www.arcgis.com/apps/Embed/index.html?webmap=c704bcdf061844868028881c3abd3b33&extent=-96.5795,39.185,-96.5693,39.1886&home=true&zoom=true&previewImage=false&scale=true&search=true&searchextent=true&details=true&legend=true&active_panel=details&basemap_gallery=true&disable_scroll=false&theme=dark"></iframe></div>



@code {
    List<Node> nodes = new List<Node>();

    bool ShowNodeList = false;
    bool ShowImportPage = false;

    [Parameter] public NodeState NodeState { get; set; }

    void AddNodes(string name, string demand, string supply, double longitude, double lattitude)
    {
        Node X = new Node();
        X.State.Name = name;
        X.State.Demand = demand;
        X.State.Supply = supply;
        X.State.Location_x = longitude;
        X.State.Location_y = lattitude;
        nodes.Add(X);

        //NodeState.Name = "";
    }

    void RemoveNodes()
    {
        nodes.Clear();

    }

    //functions for opening and closeing various pages.
    void disableNodeList()
    {
        ShowNodeList = false;
    }

    void enableNodeList()
    {
        ShowNodeList = true;
    }

    void disableImportPage()
    {
        ShowImportPage = false;
    }

    void enableImportPage()
    {
        ShowImportPage = true;
    }
}
