<!--
Copyright 2020 Kansas State University

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

@inject IJSRuntime JS

<meta charset="utf-8">
<meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no">
<title>ArcGIS JavaScript Tutorials: Get a route and directions</title>
<style>

	#viewDiv {
		padding: 0;
		margin: 10px;
		height: 500px;
		width: 1000px;
	}
</style>

<link rel="stylesheet" href="https://js.arcgis.com/4.14/esri/themes/light/main.css">

<div>

	<div id="Fields">

		<div class="form-field">
			<label>Name:</label>
			<div>
				<input @bind="NodeState.Name" />
			</div>
		</div>
		<div class="form-field">
			<label>Location:</label>
		</div>
		<div class="form-field">
			<input @bind="NodeState.Location_x" />

			<input @bind="NodeState.Location_y" />

			<button class="btn-1">
				<img src="img/location.png" />
			</button>
		</div>
		<div class="form-field">
			<label>Demand:</label>
			<div>
				<input @bind="NodeState.Demand" />

				<label>palettes</label>
			</div>
		</div>
		<div class="form-field">
			<label>Supply:</label>
			<div>
				<input @bind="NodeState.Supply" />

				<label>palettes</label>
			</div>
		</div>
		<br />
	</div>
	<div id="Btnz">

		<!-- button for adding a node  -->
		<button type="submit" @onclick="@(() =>@AddNodes(NodeState.Name,NodeState.Demand,NodeState.Supply,NodeState.Location_x,NodeState.Location_x))" class="btn-1">Add Stores</button>

		<!-- button for opening the import page -->
		<br />
		<button @onclick="enableImportPage" class="btn-1">Import Stores from .csv</button>
		<!-- button for removing the nodes from list -->
		<br />
		<button @onclick="RemoveNodes" class="btn-1">Remove All Stores</button>

		<!-- button for showing the nodelist  page -->
		<br />
		<button @onclick="enableNodeList">Stores List</button>
		<button @onclick="LoadMap">Load Map</button>
	</div>
</div>

<html>
<body onload="CreateMap()">
	<div id="viewDiv"></div>
</body>
</html>

<!-- display the Import node Page -->
@if (ShowImportPage)
{
	<ImportNodePage Nodes="nodes" Close="disableImportPage" />
}

<!-- Display the Node List  page -->
@if (ShowNodeList)
{
	<NodeListPage Close="disableNodeList" Nodes="nodes" />
}

@code {

	async Task LoadMap()
	{
		await JS.InvokeVoidAsync("CreateMap");
	}

	List<Node> nodes = new List<Node>();

	bool ShowNodeList = false;
	bool ShowImportPage = false;

	[Parameter] public NodeState NodeState { get; set; }

	void AddNodes(string name, string demand, string supply, double longitude, double lattitude)
	{
		Node X = new Node();
		X.State.Name = name;
		X.State.Demand = demand;
		X.State.Supply = supply;
		X.State.Location_x = longitude;
		X.State.Location_y = lattitude;
		nodes.Add(X);

		//NodeState.Name = "";
	}

	void RemoveNodes()
	{
		nodes.Clear();

	}

	//functions for opening and closeing various pages.
	void disableNodeList()
	{
		ShowNodeList = false;
	}

	void enableNodeList()
	{
		ShowNodeList = true;
	}

	void disableImportPage()
	{
		ShowImportPage = false;
	}

	void enableImportPage()
	{
		ShowImportPage = true;
	}
}
